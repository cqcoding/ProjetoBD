CREATE TABLE utilizador (
	userid	 BIGSERIAL,
	mail	 VARCHAR(512) NOT NULL,
	password	 VARCHAR(512) NOT NULL,
	name	 VARCHAR(512) NOT NULL,
	age		 SMALLINT NOT NULL,
	phone_number TEXT NOT NULL,
	username	 VARCHAR(512) NOT NULL,
	PRIMARY KEY(userid)
);

CREATE TABLE admin (
	utilizador_userid BIGINT,
	PRIMARY KEY(utilizador_userid)
);

CREATE TABLE student (
	balance		 FLOAT(8) NOT NULL,
	utilizador_userid BIGINT,
	PRIMARY KEY(utilizador_userid)
);

CREATE TABLE instructor_grades (
	type			 VARCHAR(512) NOT NULL,
	grades_status		 BOOL,
	grades_grade		 BIGINT,
	evaluation_period_period_id BIGINT,
	enrollment_enrollment_id	 BIGINT NOT NULL,
	utilizador_userid		 BIGINT,
	PRIMARY KEY(utilizador_userid)
);

CREATE TABLE course (
	course_id BIGINT,
	PRIMARY KEY(course_id)
);

CREATE TABLE version (
	version_id				 BIGINT,
	coordinator			 VARCHAR(512),
	assistant				 VARCHAR(512),
	capacity				 BIGINT NOT NULL,
	semester				 VARCHAR(512) NOT NULL,
	instructor_grades_utilizador_userid BIGINT NOT NULL,
	course_course_id			 BIGINT NOT NULL,
	PRIMARY KEY(version_id)
);

CREATE TABLE lesson (
	lesson_type			 VARCHAR(512) NOT NULL,
	frequency				 BIGINT NOT NULL,
	schedule				 DATE NOT NULL,
	version_version_id			 BIGINT,
	instructor_grades_utilizador_userid BIGINT NOT NULL,
	classroom_id_classrom		 BIGINT NOT NULL,
	PRIMARY KEY(version_version_id)
);

CREATE TABLE classroom (
	id_classrom BIGINT,
	building	 VARCHAR(512) NOT NULL,
	floor	 BIGINT NOT NULL,
	capacity	 BIGINT NOT NULL,
	PRIMARY KEY(id_classrom)
);

CREATE TABLE degree_program (
	degree_id BIGINT,
	PRIMARY KEY(degree_id)
);

CREATE TABLE evaluation_period (
	period_id		 BIGINT,
	start_date	 DATE NOT NULL,
	final_date	 DATE NOT NULL,
	num_approved	 BIGINT NOT NULL,
	average		 FLOAT(8) NOT NULL,
	version_version_id BIGINT NOT NULL,
	PRIMARY KEY(period_id)
);

CREATE TABLE activities_extra (
	type			 VARCHAR(512),
	student_utilizador_userid BIGINT NOT NULL,
	PRIMARY KEY(type)
);

CREATE TABLE transactions (
	transaction_id		 BIGINT,
	amount			 BIGINT,
	transactions_type	 VARCHAR(512),
	student_utilizador_userid BIGINT NOT NULL,
	activities_extra_type	 VARCHAR(512) NOT NULL,
	PRIMARY KEY(transaction_id)
);

CREATE TABLE enrollment (
	enrollment_id		 BIGINT,
	status			 BOOL NOT NULL,
	type			 VARCHAR(512) NOT NULL,
	version_version_id	 BIGINT NOT NULL,
	student_utilizador_userid BIGINT NOT NULL,
	degree_program_degree_id	 BIGINT NOT NULL,
	PRIMARY KEY(enrollment_id)
);

CREATE TABLE student_lesson (
	student_utilizador_userid BIGINT,
	lesson_version_version_id BIGINT,
	PRIMARY KEY(student_utilizador_userid,lesson_version_version_id)
);

CREATE TABLE admin_enrollment (
	admin_utilizador_userid	 BIGINT,
	enrollment_enrollment_id BIGINT,
	PRIMARY KEY(admin_utilizador_userid,enrollment_enrollment_id)
);

CREATE TABLE course_course (
	course_course_id	 BIGINT,
	course_course_id1 BIGINT,
	PRIMARY KEY(course_course_id,course_course_id1)
);

CREATE TABLE degree_program_course (
	degree_program_degree_id BIGINT,
	course_course_id	 BIGINT,
	PRIMARY KEY(degree_program_degree_id,course_course_id)
);

ALTER TABLE utilizador ADD UNIQUE (mail, username);
ALTER TABLE admin ADD CONSTRAINT admin_fk1 FOREIGN KEY (utilizador_userid) REFERENCES utilizador(userid);
ALTER TABLE student ADD CONSTRAINT student_fk1 FOREIGN KEY (utilizador_userid) REFERENCES utilizador(userid);
ALTER TABLE instructor_grades ADD CONSTRAINT instructor_grades_fk1 FOREIGN KEY (evaluation_period_period_id) REFERENCES evaluation_period(period_id);
ALTER TABLE instructor_grades ADD CONSTRAINT instructor_grades_fk2 FOREIGN KEY (enrollment_enrollment_id) REFERENCES enrollment(enrollment_id);
ALTER TABLE instructor_grades ADD CONSTRAINT instructor_grades_fk3 FOREIGN KEY (utilizador_userid) REFERENCES utilizador(userid);
ALTER TABLE version ADD CONSTRAINT version_fk1 FOREIGN KEY (instructor_grades_utilizador_userid) REFERENCES instructor_grades(utilizador_userid);
ALTER TABLE version ADD CONSTRAINT version_fk2 FOREIGN KEY (course_course_id) REFERENCES course(course_id);
ALTER TABLE lesson ADD CONSTRAINT lesson_fk1 FOREIGN KEY (version_version_id) REFERENCES version(version_id);
ALTER TABLE lesson ADD CONSTRAINT lesson_fk2 FOREIGN KEY (instructor_grades_utilizador_userid) REFERENCES instructor_grades(utilizador_userid);
ALTER TABLE lesson ADD CONSTRAINT lesson_fk3 FOREIGN KEY (classroom_id_classrom) REFERENCES classroom(id_classrom);
ALTER TABLE evaluation_period ADD CONSTRAINT evaluation_period_fk1 FOREIGN KEY (version_version_id) REFERENCES version(version_id);
ALTER TABLE activities_extra ADD CONSTRAINT activities_extra_fk1 FOREIGN KEY (student_utilizador_userid) REFERENCES student(utilizador_userid);
ALTER TABLE transactions ADD CONSTRAINT transactions_fk1 FOREIGN KEY (student_utilizador_userid) REFERENCES student(utilizador_userid);
ALTER TABLE transactions ADD CONSTRAINT transactions_fk2 FOREIGN KEY (activities_extra_type) REFERENCES activities_extra(type);
ALTER TABLE enrollment ADD CONSTRAINT enrollment_fk1 FOREIGN KEY (version_version_id) REFERENCES version(version_id);
ALTER TABLE enrollment ADD CONSTRAINT enrollment_fk2 FOREIGN KEY (student_utilizador_userid) REFERENCES student(utilizador_userid);
ALTER TABLE enrollment ADD CONSTRAINT enrollment_fk3 FOREIGN KEY (degree_program_degree_id) REFERENCES degree_program(degree_id);
ALTER TABLE student_lesson ADD CONSTRAINT student_lesson_fk1 FOREIGN KEY (student_utilizador_userid) REFERENCES student(utilizador_userid);
ALTER TABLE student_lesson ADD CONSTRAINT student_lesson_fk2 FOREIGN KEY (lesson_version_version_id) REFERENCES lesson(version_version_id);
ALTER TABLE admin_enrollment ADD CONSTRAINT admin_enrollment_fk1 FOREIGN KEY (admin_utilizador_userid) REFERENCES admin(utilizador_userid);
ALTER TABLE admin_enrollment ADD CONSTRAINT admin_enrollment_fk2 FOREIGN KEY (enrollment_enrollment_id) REFERENCES enrollment(enrollment_id);
ALTER TABLE course_course ADD CONSTRAINT course_course_fk1 FOREIGN KEY (course_course_id) REFERENCES course(course_id);
ALTER TABLE course_course ADD CONSTRAINT course_course_fk2 FOREIGN KEY (course_course_id1) REFERENCES course(course_id);
ALTER TABLE degree_program_course ADD CONSTRAINT degree_program_course_fk1 FOREIGN KEY (degree_program_degree_id) REFERENCES degree_program(degree_id);
ALTER TABLE degree_program_course ADD CONSTRAINT degree_program_course_fk2 FOREIGN KEY (course_course_id) REFERENCES course(course_id);

